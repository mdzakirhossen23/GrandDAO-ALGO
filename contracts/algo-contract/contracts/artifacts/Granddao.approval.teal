#pragma version 9

// This TEAL was generated by TEALScript v0.62.2
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// pay(pay)void
//
// // eslint-disable-next-line no-unused-vars
abi_route_pay:
	// boxMBRPayment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute pay(pay)void
	callsub pay
	int 1
	return

pay:
	proto 1 0
	retsub

// createDao(string,string,string,bytes,pay)uint64
//
// //Dao
abi_route_createDao:
	// _template: string
	txna ApplicationArgs 4
	extract 2 0

	// _dao_uri: string
	txna ApplicationArgs 3
	extract 2 0

	// _dao_wallet: string
	txna ApplicationArgs 2
	extract 2 0

	// _dao_id: byte[]
	txna ApplicationArgs 1
	extract 2 0

	// boxMBRPayment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute createDao(string,string,string,bytes,pay)uint64
	callsub createDao
	int 1
	return

createDao:
	proto 5 0

	// contracts/algo-contract/contracts/granddao.algo.ts:91
	// this._dao_uris(_dao_id).value = { dao_wallet: _dao_wallet, dao_uri: _dao_uri, finished: 'False' }
	byte 0x5f64616f5f75726973 // "_dao_uris"
	frame_dig -2 // _dao_id: bytes
	concat
	dup
	box_del
	pop
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x0006 // initial head offset
	frame_dig -3 // _dao_wallet: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub process_dynamic_tuple_element
	frame_dig -4 // _dao_uri: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub process_dynamic_tuple_element
	byte 0x000546616c7365
	callsub process_dynamic_tuple_element
	pop // pop head offset
	concat // concat head and tail
	box_put

	// contracts/algo-contract/contracts/granddao.algo.ts:92
	// this._template_uris(_dao_id).value = _template
	byte 0x5f74656d706c6174655f75726973 // "_template_uris"
	frame_dig -2 // _dao_id: bytes
	concat
	dup
	box_del
	pop
	frame_dig -5 // _template: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	box_put

	// contracts/algo-contract/contracts/granddao.algo.ts:94
	// this._dao_ids.value = this._dao_ids.value + 1
	byte 0x5f64616f5f696473 // "_dao_ids"
	byte 0x5f64616f5f696473 // "_dao_ids"
	app_global_get
	int 1
	+
	app_global_put

	// contracts/algo-contract/contracts/granddao.algo.ts:95
	// return this._dao_ids.value;
	byte 0x5f64616f5f696473 // "_dao_ids"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// updateTemplate(string,bytes,pay)string
abi_route_updateTemplate:
	// _template: string
	txna ApplicationArgs 2
	extract 2 0

	// _dao_id: byte[]
	txna ApplicationArgs 1
	extract 2 0

	// boxMBRPayment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute updateTemplate(string,bytes,pay)string
	callsub updateTemplate
	int 1
	return

updateTemplate:
	proto 3 0

	// contracts/algo-contract/contracts/granddao.algo.ts:99
	// this._template_uris(_dao_id).value = _template
	byte 0x5f74656d706c6174655f75726973 // "_template_uris"
	frame_dig -2 // _dao_id: bytes
	concat
	dup
	box_del
	pop
	frame_dig -3 // _template: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	box_put

	// contracts/algo-contract/contracts/granddao.algo.ts:100
	// return "Ok";
	byte 0x151f7c7500024f6b
	log
	retsub

// createGoal(uint64,string,bytes,pay)uint64
//
// //Goal
abi_route_createGoal:
	// _dao_id: uint64
	txna ApplicationArgs 3
	btoi

	// _goal_uri: string
	txna ApplicationArgs 2
	extract 2 0

	// _goal_id: byte[]
	txna ApplicationArgs 1
	extract 2 0

	// boxMBRPayment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute createGoal(uint64,string,bytes,pay)uint64
	callsub createGoal
	int 1
	return

createGoal:
	proto 4 0

	// contracts/algo-contract/contracts/granddao.algo.ts:117
	// this._goal_uris(_goal_id).value = {
	//       dao_id: _dao_id,
	//       goal_uri: _goal_uri
	//     }
	byte 0x5f676f616c5f75726973 // "_goal_uris"
	frame_dig -2 // _goal_id: bytes
	concat
	dup
	box_del
	pop
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x000a // initial head offset
	frame_dig -4 // _dao_id: uint64
	itob
	callsub process_static_tuple_element
	frame_dig -3 // _goal_uri: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub process_dynamic_tuple_element
	pop // pop head offset
	concat // concat head and tail
	box_put

	// contracts/algo-contract/contracts/granddao.algo.ts:122
	// this._goal_ids.value = this._goal_ids.value + 1
	byte 0x5f676f616c5f696473 // "_goal_ids"
	byte 0x5f676f616c5f696473 // "_goal_ids"
	app_global_get
	int 1
	+
	app_global_put

	// contracts/algo-contract/contracts/granddao.algo.ts:123
	// return this._goal_ids.value;
	byte 0x5f676f616c5f696473 // "_goal_ids"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// createIdeas(uint64,string,bytes,pay)uint64
//
// //Ideas
abi_route_createIdeas:
	// _goal_id: uint64
	txna ApplicationArgs 3
	btoi

	// _ideas_uri: string
	txna ApplicationArgs 2
	extract 2 0

	// _ideas_id: byte[]
	txna ApplicationArgs 1
	extract 2 0

	// boxMBRPayment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute createIdeas(uint64,string,bytes,pay)uint64
	callsub createIdeas
	int 1
	return

createIdeas:
	proto 4 0

	// contracts/algo-contract/contracts/granddao.algo.ts:139
	// this._ideas_uris(_ideas_id).value = {
	//       goal_id: _goal_id,
	//       ideas_uri: _ideas_uri,
	//       donation: 0
	//     }
	byte 0x5f69646561735f75726973 // "_ideas_uris"
	frame_dig -2 // _ideas_id: bytes
	concat
	dup
	box_del
	pop
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x0012 // initial head offset
	frame_dig -4 // _goal_id: uint64
	itob
	callsub process_static_tuple_element
	frame_dig -3 // _ideas_uri: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub process_dynamic_tuple_element
	byte 0x0000000000000000
	callsub process_static_tuple_element
	pop // pop head offset
	concat // concat head and tail
	box_put

	// contracts/algo-contract/contracts/granddao.algo.ts:145
	// this._ideas_ids.value = this._ideas_ids.value + 1
	byte 0x5f69646561735f696473 // "_ideas_ids"
	byte 0x5f69646561735f696473 // "_ideas_ids"
	app_global_get
	int 1
	+
	app_global_put

	// contracts/algo-contract/contracts/granddao.algo.ts:146
	// return this._ideas_ids.value;
	byte 0x5f69646561735f696473 // "_ideas_ids"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// createIdeasVote(string,uint64,uint64,bytes,pay)uint64
abi_route_createIdeasVote:
	// _wallet: string
	txna ApplicationArgs 4
	extract 2 0

	// _ideas_id: uint64
	txna ApplicationArgs 3
	btoi

	// _goal_id: uint64
	txna ApplicationArgs 2
	btoi

	// _ideas_votes_id: byte[]
	txna ApplicationArgs 1
	extract 2 0

	// boxMBRPayment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute createIdeasVote(string,uint64,uint64,bytes,pay)uint64
	callsub createIdeasVote
	int 1
	return

createIdeasVote:
	proto 5 0

	// contracts/algo-contract/contracts/granddao.algo.ts:151
	// this.all_ideas_votes(_ideas_votes_id).value = {
	//       goal_id: _goal_id,
	//       ideas_id: _ideas_id,
	//       wallet: _wallet
	//     }
	byte 0x616c6c5f69646561735f766f746573 // "all_ideas_votes"
	frame_dig -2 // _ideas_votes_id: bytes
	concat
	dup
	box_del
	pop
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x0012 // initial head offset
	frame_dig -3 // _goal_id: uint64
	itob
	callsub process_static_tuple_element
	frame_dig -4 // _ideas_id: uint64
	itob
	callsub process_static_tuple_element
	frame_dig -5 // _wallet: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub process_dynamic_tuple_element
	pop // pop head offset
	concat // concat head and tail
	box_put

	// contracts/algo-contract/contracts/granddao.algo.ts:157
	// this._ideas_vote_ids.value = this._ideas_vote_ids.value + 1
	byte 0x5f69646561735f766f74655f696473 // "_ideas_vote_ids"
	byte 0x5f69646561735f766f74655f696473 // "_ideas_vote_ids"
	app_global_get
	int 1
	+
	app_global_put

	// contracts/algo-contract/contracts/granddao.algo.ts:158
	// return this._ideas_vote_ids.value;
	byte 0x5f69646561735f766f74655f696473 // "_ideas_vote_ids"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// sendMsg(string,string,uint64,bytes,pay)uint64
//
// //Messages
abi_route_sendMsg:
	// _sender: string
	txna ApplicationArgs 4
	extract 2 0

	// _message: string
	txna ApplicationArgs 3
	extract 2 0

	// _ideas_id: uint64
	txna ApplicationArgs 2
	btoi

	// _message_id: byte[]
	txna ApplicationArgs 1
	extract 2 0

	// boxMBRPayment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute sendMsg(string,string,uint64,bytes,pay)uint64
	callsub sendMsg
	int 1
	return

sendMsg:
	proto 5 0

	// contracts/algo-contract/contracts/granddao.algo.ts:164
	// this.all_messages(_message_id).value = {
	//       message_id: this._message_ids.value, ideas_id: _ideas_id, message: _message, sender: _sender
	//     }
	byte 0x616c6c5f6d65737361676573 // "all_messages"
	frame_dig -2 // _message_id: bytes
	concat
	dup
	box_del
	pop
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x0014 // initial head offset
	byte 0x5f6d6573736167655f696473 // "_message_ids"
	app_global_get
	itob
	callsub process_static_tuple_element
	frame_dig -3 // _ideas_id: uint64
	itob
	callsub process_static_tuple_element
	frame_dig -4 // _message: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub process_dynamic_tuple_element
	frame_dig -5 // _sender: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub process_dynamic_tuple_element
	pop // pop head offset
	concat // concat head and tail
	box_put

	// contracts/algo-contract/contracts/granddao.algo.ts:167
	// this._message_ids.value = this._message_ids.value + 1
	byte 0x5f6d6573736167655f696473 // "_message_ids"
	byte 0x5f6d6573736167655f696473 // "_message_ids"
	app_global_get
	int 1
	+
	app_global_put

	// contracts/algo-contract/contracts/granddao.algo.ts:169
	// return this._message_ids.value;
	byte 0x5f6d6573736167655f696473 // "_message_ids"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// sendReply(uint64,string,uint64,bytes,pay)uint64
abi_route_sendReply:
	// ideas_id: uint64
	txna ApplicationArgs 4
	btoi

	// _reply: string
	txna ApplicationArgs 3
	extract 2 0

	// _message_id: uint64
	txna ApplicationArgs 2
	btoi

	// _reply_id: byte[]
	txna ApplicationArgs 1
	extract 2 0

	// boxMBRPayment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute sendReply(uint64,string,uint64,bytes,pay)uint64
	callsub sendReply
	int 1
	return

sendReply:
	proto 5 0

	// contracts/algo-contract/contracts/granddao.algo.ts:174
	// this.all_replies(_reply_id).value = {
	//       reply_id: this._reply_ids.value, message_id: _message_id, message:_reply, ideas_id: ideas_id
	//     }
	byte 0x616c6c5f7265706c696573 // "all_replies"
	frame_dig -2 // _reply_id: bytes
	concat
	dup
	box_del
	pop
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x001a // initial head offset
	byte 0x5f7265706c795f696473 // "_reply_ids"
	app_global_get
	itob
	callsub process_static_tuple_element
	frame_dig -3 // _message_id: uint64
	itob
	callsub process_static_tuple_element
	frame_dig -5 // ideas_id: uint64
	itob
	callsub process_static_tuple_element
	frame_dig -4 // _reply: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub process_dynamic_tuple_element
	pop // pop head offset
	concat // concat head and tail
	box_put

	// contracts/algo-contract/contracts/granddao.algo.ts:177
	// this._reply_ids.value = this._reply_ids.value + 1
	byte 0x5f7265706c795f696473 // "_reply_ids"
	byte 0x5f7265706c795f696473 // "_reply_ids"
	app_global_get
	int 1
	+
	app_global_put

	// contracts/algo-contract/contracts/granddao.algo.ts:179
	// return this._reply_ids.value;
	byte 0x5f7265706c795f696473 // "_reply_ids"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// addDonation(string,uint64,uint64,bytes,bytes,pay)void
abi_route_addDonation:
	// _donator: string
	txna ApplicationArgs 5
	extract 2 0

	// _doantion: uint64
	txna ApplicationArgs 4
	btoi

	// _ideas_id_int: uint64
	txna ApplicationArgs 3
	btoi

	// _ideas_id: byte[]
	txna ApplicationArgs 2
	extract 2 0

	// _donation_id: byte[]
	txna ApplicationArgs 1
	extract 2 0

	// boxMBRPayment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute addDonation(string,uint64,uint64,bytes,bytes,pay)void
	callsub addDonation
	int 1
	return

addDonation:
	proto 6 0

	// contracts/algo-contract/contracts/granddao.algo.ts:184
	// this._donated(_ideas_id).value =  _doantion
	byte 0x5f646f6e61746564 // "_donated"
	frame_dig -3 // _ideas_id: bytes
	concat
	frame_dig -5 // _doantion: uint64
	itob
	box_put

	// contracts/algo-contract/contracts/granddao.algo.ts:186
	// this._donations(_donation_id).value ={
	//       ideas_id:_ideas_id_int,
	//       wallet:_donator,
	//       donation:_doantion
	//     }
	byte 0x5f646f6e6174696f6e73 // "_donations"
	frame_dig -2 // _donation_id: bytes
	concat
	dup
	box_del
	pop
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x0012 // initial head offset
	frame_dig -4 // _ideas_id_int: uint64
	itob
	callsub process_static_tuple_element
	frame_dig -6 // _donator: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub process_dynamic_tuple_element
	frame_dig -5 // _doantion: uint64
	itob
	callsub process_static_tuple_element
	pop // pop head offset
	concat // concat head and tail
	box_put

	// contracts/algo-contract/contracts/granddao.algo.ts:191
	// this._donations_ids.value = this._donations_ids.value + 1
	byte 0x5f646f6e6174696f6e735f696473 // "_donations_ids"
	byte 0x5f646f6e6174696f6e735f696473 // "_donations_ids"
	app_global_get
	int 1
	+
	app_global_put
	retsub

// joinCommunity(string,uint64,bytes,pay)uint64
abi_route_joinCommunity:
	// person: string
	txna ApplicationArgs 3
	extract 2 0

	// dao_id: uint64
	txna ApplicationArgs 2
	btoi

	// _join_id: byte[]
	txna ApplicationArgs 1
	extract 2 0

	// boxMBRPayment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute joinCommunity(string,uint64,bytes,pay)uint64
	callsub joinCommunity
	int 1
	return

joinCommunity:
	proto 4 0

	// contracts/algo-contract/contracts/granddao.algo.ts:197
	// this._joined_person(_join_id).value = { daoid: dao_id,  wallet: person}
	byte 0x5f6a6f696e65645f706572736f6e // "_joined_person"
	frame_dig -2 // _join_id: bytes
	concat
	dup
	box_del
	pop
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x000a // initial head offset
	frame_dig -3 // dao_id: uint64
	itob
	callsub process_static_tuple_element
	frame_dig -4 // person: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub process_dynamic_tuple_element
	pop // pop head offset
	concat // concat head and tail
	box_put

	// contracts/algo-contract/contracts/granddao.algo.ts:199
	// this._join_ids.value = this._join_ids.value + 1
	byte 0x5f6a6f696e5f696473 // "_join_ids"
	byte 0x5f6a6f696e5f696473 // "_join_ids"
	app_global_get
	int 1
	+
	app_global_put

	// contracts/algo-contract/contracts/granddao.algo.ts:200
	// return this._join_ids.value;
	byte 0x5f6a6f696e5f696473 // "_join_ids"
	app_global_get
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_createApplication:
	int 1
	return

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "pay(pay)void"
	method "createDao(pay,byte[],string,string,string)uint64"
	method "updateTemplate(pay,byte[],string)string"
	method "createGoal(pay,byte[],string,uint64)uint64"
	method "createIdeas(pay,byte[],string,uint64)uint64"
	method "createIdeasVote(pay,byte[],uint64,uint64,string)uint64"
	method "sendMsg(pay,byte[],uint64,string,string)uint64"
	method "sendReply(pay,byte[],uint64,string,uint64)uint64"
	method "addDonation(pay,byte[],byte[],uint64,uint64,string)void"
	method "joinCommunity(pay,byte[],uint64,string)uint64"
	txna ApplicationArgs 0
	match abi_route_pay abi_route_createDao abi_route_updateTemplate abi_route_createGoal abi_route_createIdeas abi_route_createIdeasVote abi_route_sendMsg abi_route_sendReply abi_route_addDonation abi_route_joinCommunity
	err

process_static_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -1 // element
	concat
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub

process_dynamic_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -2 // head offset
	concat
	frame_bury -4 // tuple head
	frame_dig -1 // element
	dup
	len
	frame_dig -2 // head offset
	btoi
	+
	itob
	extract 6 2
	frame_bury -2 // head offset
	frame_dig -3 // tuple tail
	swap
	concat
	frame_bury -3 // tuple tail
	frame_dig -4 // tuple head
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub